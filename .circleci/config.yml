version: 2

jobs:
  build:
    docker:
      - image: circleci/golang
    environment:
      O: "ATNU"
      R: "sarum-hymnal"
    steps:
      - checkout
      - run:
          name: Determine which directories have changed
          command: |
            git diff --no-commit-id --name-only -r `git log -n 2 --oneline --pretty=format:"%h" | tail -n1` | cut -d/ -f2 | sort -u >  projects
            printf "Modified directories:\n"
            cat projects
            while read project; do
              if grep -Fxq $project projects.txt; then
                printf "\nTriggerring build for dir: "$dir
                curl -s -d build_parameters[CIRCLE_JOB]=${project} https://circleci.com/api/v1.1/project/github/$O/$R/tree/$CIRCLE_BRANCH?circle-token=c97705f6453e623bb30c89baf895860925f8a3b8
              fi
            done <projects

  cantaloupe:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo/services/cantaloupe

    steps:
      - checkout:
          path: ~/repo

      - setup_remote_docker:
                docker_layer_caching:

      - run: |
          cd ../.. && docker build -f services/cantaloupe/Dockerfile -t rsenu.azurecr.io/sarum-hymnal-cantaloupe:latest -t rsenu.azurecr.io/sarum-hymnal-cantaloupe:$CIRCLE_SHA1 .
          docker login -u $DOCKER_USER -p $DOCKER_PASS rsenu.azurecr.io
          docker push rsenu.azurecr.io/sarum-hymnal-cantaloupe:latest
          docker push rsenu.azurecr.io/sarum-hymnal-cantaloupe:$CIRCLE_SHA1

  client:
      docker:
        - image: circleci/node:8
      working_directory: ~/repo/services/client

      steps:
        - checkout:
            path: ~/repo

        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-

        - run: npm install
        - run: npm rebuild node-sass
        - run: npm run build

        - setup_remote_docker:
                  docker_layer_caching:

        - run: |
            cd ../.. && docker build -f services/client/Dockerfile -t rsenuatnu.azurecr.io/sarum-hymnal-client:latest -t rsenuatnu.azurecr.io/sarum-hymnal-client:$CIRCLE_SHA1 .
            docker login -u $DOCKER_USER -p $DOCKER_PASS rsenuatnu.azurecr.io
            docker push rsenuatnu.azurecr.io/sarum-hymnal-client:latest
            docker push rsenuatnu.azurecr.io/sarum-hymnal-client:$CIRCLE_SHA1

        - save_cache:
            paths:
              - node_modules
            key: v1-dependencies-{{ checksum "package.json" }}
            
  server:
      docker:
        - image: circleci/golang:1.12
      working_directory: /go/src/github.com/ATNU/sarum-hymnal/services/server
  
      steps:
        - checkout:
            path: /go/src/github.com/ATNU/sarum-hymnal
  
        - restore_cache:
            keys:
              - v1-pkg-cache
  
        - run: go get github.com/spf13/viper
        - run: go get github.com/gorilla/mux
        - run: go get github.com/lib/pq
        - run: go get github.com/fsnotify/fsnotify

        - run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix nocgo -o app .
  
        - setup_remote_docker:
                  docker_layer_caching:
  
        - run: |
            cd ../.. && docker build -f services/server/Dockerfile -t rsenuatnu.azurecr.io/sarum-hymnal-server:latest -t rsenuatnu.azurecr.io/sarum-hymnal-server:$CIRCLE_SHA1 .
            docker login -u $DOCKER_USER -p $DOCKER_PASS rsenuatnu.azurecr.io
            docker push rsenuatnu.azurecr.io/sarum-hymnal-server:latest
            docker push rsenuatnu.azurecr.io/sarum-hymnal-server:$CIRCLE_SHA1
  
        - save_cache:
            key: v1-pkg-cache
            paths:
              - "/go/pkg"

  postgres:
      docker:
        - image: circleci/openjdk:8-jdk
      working_directory: ~/repo/services/postgres

      steps:
        - checkout:
            path: ~/repo

        - setup_remote_docker:
                  docker_layer_caching:

        - run: |
            cd ../.. && docker build -f services/postgres/Dockerfile -t rsenuatnu.azurecr.io/sarum-hymnal-postgres:latest -t rsenuatnu.azurecr.io/sarum-hymnal-postgres:$CIRCLE_SHA1 .
            docker login -u $DOCKER_USER -p $DOCKER_PASS rsenuatnu.azurecr.io
            docker push rsenuatnu.azurecr.io/sarum-hymnal-postgres:latest
            docker push rsenuatnu.azurecr.io/sarum-hymnal-postgres:$CIRCLE_SHA1

  minio:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo

    steps:
      - checkout
      - run: echo $PWD
      - run: ls


      - setup_remote_docker:
                docker_layer_caching:

      - run: |
          cd ../.. && docker build -f services/minio/Dockerfile -t rsenuatnu.azurecr.io/sarum-hymnal-minio:latest -t rsenuatnu.azurecr.io/sarum-hymnal-minio:$CIRCLE_SHA1 .
          docker login -u $DOCKER_USER -p $DOCKER_PASS rsenuatnu.azurecr.io
          docker push rsenuatnu.azurecr.io/sarum-hymnal-minio:latest
          docker push rsenuatnu.azurecr.io/sarum-hymnal-minio:$CIRCLE_SHA1
